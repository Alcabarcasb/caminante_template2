{"ast":null,"code":"\"use strict\";\n\nvar _defineProperty = require(\"@babel/runtime/helpers/defineProperty\");\nvar _objectWithoutProperties = require(\"@babel/runtime/helpers/objectWithoutProperties\");\nvar _excluded = [\"ITSAppUsesNonExemptEncryption\"];\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getUsesNonExemptEncryption = getUsesNonExemptEncryption;\nexports.setUsesNonExemptEncryption = setUsesNonExemptEncryption;\nexports.withUsesNonExemptEncryption = void 0;\nfunction _iosPlugins() {\n  var data = require(\"../plugins/ios-plugins\");\n  _iosPlugins = function _iosPlugins() {\n    return data;\n  };\n  return data;\n}\nvar withUsesNonExemptEncryption = (0, _iosPlugins().createInfoPlistPluginWithPropertyGuard)(setUsesNonExemptEncryption, {\n  infoPlistProperty: 'ITSAppUsesNonExemptEncryption',\n  expoConfigProperty: 'ios.config.usesNonExemptEncryption'\n}, 'withUsesNonExemptEncryption');\nexports.withUsesNonExemptEncryption = withUsesNonExemptEncryption;\nfunction getUsesNonExemptEncryption(config) {\n  var _config$ios$config$us, _config$ios, _config$ios$config;\n  return (_config$ios$config$us = config === null || config === void 0 ? void 0 : (_config$ios = config.ios) === null || _config$ios === void 0 ? void 0 : (_config$ios$config = _config$ios.config) === null || _config$ios$config === void 0 ? void 0 : _config$ios$config.usesNonExemptEncryption) !== null && _config$ios$config$us !== void 0 ? _config$ios$config$us : null;\n}\nfunction setUsesNonExemptEncryption(config, _ref) {\n  var ITSAppUsesNonExemptEncryption = _ref.ITSAppUsesNonExemptEncryption,\n    infoPlist = _objectWithoutProperties(_ref, _excluded);\n  var usesNonExemptEncryption = getUsesNonExemptEncryption(config);\n  if (usesNonExemptEncryption === null) {\n    return infoPlist;\n  }\n  return _objectSpread(_objectSpread({}, infoPlist), {}, {\n    ITSAppUsesNonExemptEncryption: usesNonExemptEncryption\n  });\n}","map":{"version":3,"names":["_iosPlugins","data","require","withUsesNonExemptEncryption","createInfoPlistPluginWithPropertyGuard","setUsesNonExemptEncryption","infoPlistProperty","expoConfigProperty","exports","getUsesNonExemptEncryption","config","_config$ios$config$us","_config$ios","_config$ios$config","ios","usesNonExemptEncryption","_ref","ITSAppUsesNonExemptEncryption","infoPlist","_objectWithoutProperties","_excluded","_objectSpread"],"sources":["C:\\Users\\LENOVO\\source\\repos\\react-native-walkthrough\\react-native-walkthrough-master\\node_modules\\@expo\\config-plugins\\src\\ios\\UsesNonExemptEncryption.ts"],"sourcesContent":["import { ExpoConfig } from '@expo/config-types';\n\nimport { createInfoPlistPluginWithPropertyGuard } from '../plugins/ios-plugins';\nimport { InfoPlist } from './IosConfig.types';\n\nexport const withUsesNonExemptEncryption = createInfoPlistPluginWithPropertyGuard(\n  setUsesNonExemptEncryption,\n  {\n    infoPlistProperty: 'ITSAppUsesNonExemptEncryption',\n    expoConfigProperty: 'ios.config.usesNonExemptEncryption',\n  },\n  'withUsesNonExemptEncryption'\n);\n\nexport function getUsesNonExemptEncryption(config: Pick<ExpoConfig, 'ios'>) {\n  return config?.ios?.config?.usesNonExemptEncryption ?? null;\n}\n\nexport function setUsesNonExemptEncryption(\n  config: Pick<ExpoConfig, 'ios'>,\n  { ITSAppUsesNonExemptEncryption, ...infoPlist }: InfoPlist\n): InfoPlist {\n  const usesNonExemptEncryption = getUsesNonExemptEncryption(config);\n\n  // Make no changes if the key is left blank\n  if (usesNonExemptEncryption === null) {\n    return infoPlist;\n  }\n\n  return {\n    ...infoPlist,\n    ITSAppUsesNonExemptEncryption: usesNonExemptEncryption,\n  };\n}\n"],"mappings":";;;;;;;;;;;;;AAEA,SAAAA,YAAA;EAAA,IAAAC,IAAA,GAAAC,OAAA;EAAAF,WAAA,YAAAA,YAAA;IAAA,OAAAC,IAAA;EAAA;EAAA,OAAAA,IAAA;AAAA;AAGO,IAAME,2BAA2B,GAAG,IAAAH,WAAA,GAAAI,sCAAsC,EAC/EC,0BAA0B,EAC1B;EACEC,iBAAiB,EAAE,+BAA+B;EAClDC,kBAAkB,EAAE;AACtB,CAAC,EACD,6BAA6B,CAC9B;AAACC,OAAA,CAAAL,2BAAA,GAAAA,2BAAA;AAEK,SAASM,0BAA0BA,CAACC,MAA+B,EAAE;EAAA,IAAAC,qBAAA,EAAAC,WAAA,EAAAC,kBAAA;EAC1E,QAAAF,qBAAA,GAAOD,MAAM,aAANA,MAAM,wBAAAE,WAAA,GAANF,MAAM,CAAEI,GAAG,cAAAF,WAAA,wBAAAC,kBAAA,GAAXD,WAAA,CAAaF,MAAM,cAAAG,kBAAA,uBAAnBA,kBAAA,CAAqBE,uBAAuB,cAAAJ,qBAAA,cAAAA,qBAAA,GAAI,IAAI;AAC7D;AAEO,SAASN,0BAA0BA,CACxCK,MAA+B,EAAAM,IAAA,EAEpB;EAAA,IADTC,6BAA6B,GAAAD,IAAA,CAA7BC,6BAA6B;IAAKC,SAAA,GAAAC,wBAAA,CAAAH,IAAA,EAAAI,SAAA;EAEpC,IAAML,uBAAuB,GAAGN,0BAA0B,CAACC,MAAM,CAAC;EAGlE,IAAIK,uBAAuB,KAAK,IAAI,EAAE;IACpC,OAAOG,SAAS;EAClB;EAEA,OAAAG,aAAA,CAAAA,aAAA,KACKH,SAAS;IACZD,6BAA6B,EAAEF;EAAA;AAEnC"},"metadata":{},"sourceType":"script","externalDependencies":[]}